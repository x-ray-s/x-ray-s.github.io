(window.webpackJsonp=window.webpackJsonp||[]).push([[12],{376:function(s,t,a){s.exports=a.p+"assets/img/hyper-wsl.327d9d33.png"},377:function(s,t,a){s.exports=a.p+"assets/img/hyper-cmd.c905fc12.png"},478:function(s,t,a){"use strict";a.r(t);var n=a(23),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,n=s._self._c||t;return n("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[n("h1",{attrs:{id:"page-title"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#page-title"}},[s._v("#")]),s._v(" "+s._s(s.$page.title))]),s._v(" "),n("p",[s._v("因为腾讯云的 SDK 不支持跨平台打包，所以需要使用 Windows 系统来打包 Windows 应用，在虚拟机中配置开发环境并不适合长期开发，所以购买了一块 SSD 作为 Windows 系统盘。")]),s._v(" "),n("h3",{attrs:{id:"准备"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#准备"}},[s._v("#")]),s._v(" 准备")]),s._v(" "),n("p",[s._v("首先避免引起不必要的权限问题，在创建用户时，要把用户作为管理员身份。")]),s._v(" "),n("p",[s._v("梯子是必须的。")]),s._v(" "),n("h3",{attrs:{id:"安装-wsl"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#安装-wsl"}},[s._v("#")]),s._v(" 安装 WSL")]),s._v(" "),n("p",[s._v("为了更好的使用 node，这里选择使用 WSL 作为运行系统， WSL 是 Windows 环境的 Linux 子系统，这里使用的是 Ubuntu。根据指引 "),n("a",{attrs:{href:"https://docs.microsoft.com/en-us/windows/wsl/install-win10",target:"_blank",rel:"noopener noreferrer"}},[s._v("Windows Subsystem for Linux Installation Guide for Windows 10"),n("OutboundLink")],1),s._v(" 安装")]),s._v(" "),n("p",[s._v("如果你的 Mircosoft Store 无法打开，请检查你的网络设置中代理是否已经关闭。")]),s._v(" "),n("p",[s._v("在子系统中安装 "),n("code",[s._v("zsh")]),s._v(" 以及开发环境，通过 "),n("code",[s._v("cp")]),s._v(" 命令将 Windows 与 Linux 文件互传。")]),s._v(" "),n("p",[n("a",{attrs:{href:"https://docs.microsoft.com/zh-cn/windows/nodejs/setup-on-wsl2",target:"_blank",rel:"noopener noreferrer"}},[s._v("使用 WSL 2 设置 Node.js 开发环境"),n("OutboundLink")],1)]),s._v(" "),n("p",[n("a",{attrs:{href:"https://app-qa.xiaobangguihua.com/live/intro/course/37536510397427968",target:"_blank",rel:"noopener noreferrer"}},[s._v("wsl 使用 windows 命令"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("WSL 环境下需要安装语言包来支持 VScode 中文")]),s._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("apt-get")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("install")]),s._v(" language-pack-zh-han*\n")])])]),n("h3",{attrs:{id:"windows-shells"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#windows-shells"}},[s._v("#")]),s._v(" Windows Shells")]),s._v(" "),n("p",[n("s",[s._v("选择 "),n("code",[s._v("hyper")]),s._v(" 作为主命令行工具， "),n("code",[s._v("cmder mini")]),s._v(" 作为备用命令行工具。hyper 中集成 cmder 会造成使用界面关闭控制时，会造成程序崩溃，但使用 "),n("code",[s._v("exit;")]),s._v(" 命令不会，但有时也会习惯性使用界面关闭，所以为了避免这个问题就分离了两个命令行使用。")])]),s._v(" "),n("p",[s._v("hyper 配置")]),s._v(" "),n("div",{staticClass:"language-js extra-class"},[n("pre",{pre:!0,attrs:{class:"language-js"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 插件")]),s._v("\nplugins"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hyper-search"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hyper-pane"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hyper-tabs-enhanced"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hyper-launch-menu"')]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"hyper-material-theme"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// shells 配置")]),s._v("\nshells"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cmd'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    shell"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'cmd.exe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'--login'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    "),n("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("default")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    name"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wsl'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    shell"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'wsl.exe'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n    args"),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n")])])]),n("p",[s._v("WSL 界面")]),s._v(" "),n("p",[n("img",{attrs:{src:a(376),alt:"wsl"}})]),s._v(" "),n("p",[s._v("CMD 界面")]),s._v(" "),n("p",[n("img",{attrs:{src:a(377),alt:"cmd"}})]),s._v(" "),n("p",[s._v("通过以上配置，我可以在 Windows 环境下使用 Linux 环境和命令行，并且可以在两个系统内自由切换。")]),s._v(" "),n("p",[s._v("关于命令行配置可以参考 "),n("a",{attrs:{href:"https://tjay.dev/howto-my-terminal-shell-setup-hyper-js-zsh-starship/",target:"_blank",rel:"noopener noreferrer"}},[s._v("HowTo: My Terminal & Shell setup - Hyper.js + ZSH + starship"),n("OutboundLink")],1)]),s._v(" "),n("p",[s._v("ZSH 配置")]),s._v(" "),n("div",{staticClass:"language-bash extra-class"},[n("pre",{pre:!0,attrs:{class:"language-bash"}},[n("code",[n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# ~/.zshrc")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# where proxy")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("proxy")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("http_proxy")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://127.0.0.1:1080"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("https_proxy")]),n("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"http://127.0.0.1:1080"')]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HTTP Proxy on"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# where noproxy")]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token function-name function"}},[s._v("unproxy")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" http_proxy\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("unset")]),s._v(" https_proxy\n  "),n("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("echo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v('"HTTP Proxy off"')]),s._v("\n"),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),n("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# 解决不匹配 * 问题")]),s._v("\nsetopt no_nomatch\n")])])]),n("p",[n("strong",[s._v("目前已经切换为 Windows Terminal 替换 Hyper")])]),s._v(" "),n("h3",{attrs:{id:"开发环境"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#开发环境"}},[s._v("#")]),s._v(" 开发环境")]),s._v(" "),n("p",[s._v("注意区分 Windows 环境和 WSL 环境")]),s._v(" "),n("ul",[n("li",[s._v("Node NVM NRM")])]),s._v(" "),n("h3",{attrs:{id:"工具"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#工具"}},[s._v("#")]),s._v(" 工具")]),s._v(" "),n("ul",[n("li",[s._v("窗口管理工具： "),n("a",{attrs:{href:"https://github.com/microsoft/PowerToys",target:"_blank",rel:"noopener noreferrer"}},[s._v("PowerToys"),n("OutboundLink")],1)]),s._v(" "),n("li",[s._v("POSTMAN")]),s._v(" "),n("li",[s._v("Docker")])]),s._v(" "),n("h3",{attrs:{id:"数据库"}},[n("a",{staticClass:"header-anchor",attrs:{href:"#数据库"}},[s._v("#")]),s._v(" 数据库")]),s._v(" "),n("p",[s._v("mysql 8.x 安装在 WSL 后，如果遇到无法通过 socket 连接错误，尝试以下命令")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("mkdir")]),s._v(" -p /var/run/mysqld\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("chown")]),s._v(" mysql /var/run/mysqld/\n"),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("service")]),s._v(" mysql restart\n")])])]),n("p",[s._v("设置初始密码，首先找到可登入的系统账户和密码")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[n("span",{pre:!0,attrs:{class:"token function"}},[s._v("sudo")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token function"}},[s._v("cat")]),s._v(" /etc/mysql/debian.cnf\n")])])]),n("p",[s._v("随后修改密码")]),s._v(" "),n("div",{staticClass:"language-shell extra-class"},[n("pre",{pre:!0,attrs:{class:"language-shell"}},[n("code",[s._v("ALTER "),n("span",{pre:!0,attrs:{class:"token environment constant"}},[s._v("USER")]),s._v(" "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'root'")]),s._v("@"),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'localhost'")]),s._v(" IDENTIFIED WITH mysql_native_password BY "),n("span",{pre:!0,attrs:{class:"token string"}},[s._v("'123456'")]),n("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n")])])])])}),[],!1,null,null,null);t.default=e.exports}}]);