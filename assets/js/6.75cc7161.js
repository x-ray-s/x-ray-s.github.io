(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{358:function(t,e,r){t.exports=r.p+"assets/img/release-branch.2ff71a04.svg"},359:function(t,e,r){t.exports=r.p+"assets/img/hotfix-branch.731726f1.svg"},360:function(t,e,r){t.exports=r.p+"assets/img/git-flow.b5dc795e.png"},450:function(t,e,r){"use strict";r.r(e);var _=r(23),a=Object(_.a)({},(function(){var t=this,e=t.$createElement,_=t._self._c||e;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h1",{attrs:{id:"page-title"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#page-title"}},[t._v("#")]),t._v(" "+t._s(t.$page.title))]),t._v(" "),_("h2",{attrs:{id:"中心化的工作流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#中心化的工作流"}},[t._v("#")]),t._v(" 中心化的工作流")]),t._v(" "),_("p",[t._v("中心化的工作流将中央仓库作为项目中所有修改的唯一入口("),_("code",[t._v("master")]),t._v(")，所有更改都被提交到这个分支。")]),t._v(" "),_("p",[t._v("开发者将中央仓库克隆("),_("code",[t._v("clone")]),t._v(")岛本地后开始工作，在本地副本中，修改文件和提交("),_("code",[t._v("commit")]),t._v(")更改，这些新的提交都会保存在本地，我们在开发时可以完全无视上游的开发，直到需要的时候。为了向中心仓库发布修改，开发者需要将本地本质推送("),_("code",[t._v("push")]),t._v(")到中央仓库。")]),t._v(" "),_("h2",{attrs:{id:"解决冲突"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#解决冲突"}},[t._v("#")]),t._v(" 解决冲突")]),t._v(" "),_("p",[t._v("当本地代码提交到中央仓库时，如果有其他开发者在你提交之前也提交到了中央仓库，程序先比对代码，如果当两个改动发生在同一个文件的同一些行上，就需要开发者手动解决冲突。"),_("code",[t._v("git status")]),t._v(" 显示 "),_("strong",[t._v("both modify")]),t._v("，当我们打开发生冲突的文件内容时，程序会把有问题的区域标记在 "),_("code",[t._v("<<<<<<HEAD")]),t._v(" 和 "),_("code",[t._v(">>>>>>")]),t._v(" 内，现在我们需要清理这些问题，过程中，我们可能需要咨询一下和你代码发生冲突的其他开发者，从而更好的决定哪些改动才是最终正确的。")]),t._v(" "),_("p",[t._v("解决冲突时的一些建议：")]),t._v(" "),_("ul",[_("li",[t._v("尽量保持自己与主分支同步，开始开发之前或提交前，拉取中央仓库与之同步。"),_("code",[t._v("git fetch")]),t._v(" 和 "),_("code",[t._v("git rebase")])]),t._v(" "),_("li",[t._v("如果长时间没有与主分支同步，"),_("code",[t._v("git rebase")]),t._v(" 时会被中断多次，更好的办法是同步主分支后 "),_("code",[t._v("git merge")])]),t._v(" "),_("li",[t._v("如果不确定你的同步后的冲突， "),_("code",[t._v("--abort")]),t._v(" 参数可以放弃合并和变基")])]),t._v(" "),_("h2",{attrs:{id:"feature-工作流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#feature-工作流"}},[t._v("#")]),t._v(" Feature 工作流")]),t._v(" "),_("p",[t._v("在你的开发流程中添加功能分支是一个简单的方式，来促进协作和开发者之间的交流。这种封装使得多个开发者专注自己的功能而不会打扰主代码库。它还保证 master 分支永远不会包含损坏的代码，给持续集成环境带来了是很大的好处。")]),t._v(" "),_("p",[t._v("Feature 分支工作流同样使用中央仓库，master 同样代表官方的项目历史。开发者每次进行新的工作时创建一个新的分支。每个分支都应该有一个清晰、高度集中的目的。开发者可以在 feature 分支上编辑、缓存、提交，feature 分支可以（也应该）被推送到中央仓库，当然，这也是备份每个开发者本地提交的好办法。")]),t._v(" "),_("h2",{attrs:{id:"gitflow-工作流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#gitflow-工作流"}},[t._v("#")]),t._v(" Gitflow 工作流")]),t._v(" "),_("p",[t._v("GitFlow 工作流围绕项目发布定义了一个严格的分支模型。")]),t._v(" "),_("ul",[_("li",[t._v("历史分支")]),t._v(" "),_("li",[t._v("功能分支")]),t._v(" "),_("li",[t._v("发布分支")]),t._v(" "),_("li",[t._v("维护分支")])]),t._v(" "),_("p",[t._v("发部分支")]),t._v(" "),_("p",[_("img",{attrs:{src:r(358),alt:"发布分支"}})]),t._v(" "),_("p",[t._v("维护分支")]),t._v(" "),_("p",[_("img",{attrs:{src:r(359),alt:"维护分支"}})]),t._v(" "),_("h2",{attrs:{id:"fork-工作流"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#fork-工作流"}},[t._v("#")]),t._v(" Fork 工作流")]),t._v(" "),_("p",[t._v("公开的仓库应该永远是裸的")]),t._v(" "),_("ul",[_("li",[t._v("开发者 fork 仓库")]),t._v(" "),_("li",[t._v("开发者将 fork 的仓库克隆到本地")]),t._v(" "),_("li",[t._v("开发者进行自己的开发")]),t._v(" "),_("li",[t._v("开发者发布他们的功能")]),t._v(" "),_("li",[t._v("项目维护者整合他们的功能")]),t._v(" "),_("li",[t._v("开发者和中央仓库保持同步")])]),t._v(" "),_("p",[_("img",{attrs:{src:r(360),alt:"分支问题"}})]),t._v(" "),_("h2",{attrs:{id:"参考"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#参考"}},[t._v("#")]),t._v(" 参考")]),t._v(" "),_("ul",[_("li",[_("a",{attrs:{href:"https://www.atlassian.com/git/tutorials/comparing-workflows",target:"_blank",rel:"noopener noreferrer"}},[t._v("Comparing Workflows"),_("OutboundLink")],1)]),t._v(" "),_("li",[_("a",{attrs:{href:"https://github.com/geeeeeeeeek/git-recipes/wiki/3.5-%E5%B8%B8%E8%A7%81%E5%B7%A5%E4%BD%9C%E6%B5%81%E6%AF%94%E8%BE%83",target:"_blank",rel:"noopener noreferrer"}},[t._v("常见工作流比较"),_("OutboundLink")],1)])])])}),[],!1,null,null,null);e.default=a.exports}}]);